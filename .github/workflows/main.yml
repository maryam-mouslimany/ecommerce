name: Backend CI/CD

on:
  push:
    branches: [backend]
  pull_request:
    branches: [backend]

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, pdo_sqlite, phar, tokenizer, xml, xmlwriter, zip, curl, fileinfo, openssl
          coverage: xdebug

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Copy .env.example to .env
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env

      - name: Check Laravel structure
        run: |
          ls -la
          echo "Checking vendor directory..."
          ls -la vendor/ || echo "Vendor directory not found"
          echo "Checking bootstrap directory..."
          ls -la bootstrap/ || echo "Bootstrap directory not found"

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Install NPM dependencies
        run: npm install

      - name: Verify Laravel installation
        run: |
          php artisan --version
          php artisan list
        env:
          APP_ENV: testing

      - name: Prepare Laravel environment
        run: |
          php artisan key:generate
          php artisan config:clear
          php artisan config:cache
        env:
          APP_ENV: testing

      - name: Run database migrations
        run: php artisan migrate --force
        env:
          APP_ENV: testing

      - name: Run tests
        run: composer test
        env:
          APP_ENV: testing

      - name: Build frontend assets
        run: npm run build

  security-check:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Prepare Laravel environment
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env
          php artisan key:generate
          php artisan config:clear
        env:
          APP_ENV: testing

      - name: Run security audit
        run: composer audit --format=json --no-interaction

  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Prepare Laravel environment
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env
          php artisan key:generate
          php artisan config:clear
        env:
          APP_ENV: testing

      - name: Run PHP syntax check
        run: find . -name "*.php" -not -path "./vendor/*" -not -path "./node_modules/*" -exec php -l {} \;
