name: Backend CI/CD

on:
  push:
    branches: [backend, dev]
  pull_request:
    branches: [backend, dev]

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, pdo_sqlite, phar, tokenizer, xmlwriter, zip, curl, fileinfo, openssl
          coverage: xdebug

      - name: Copy .env.example to .env
        run: |
          cp .env.example .env
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=sqlite/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=database\/database.sqlite/' .env
          sed -i 's/JWT_SECRET=.*/JWT_SECRET=ci_test_jwt_secret_key_for_testing_purposes_only/' .env
          sed -i 's/APP_ENV=.*/APP_ENV=testing/' .env

      - name: Create SQLite database
        run: |
          touch database/database.sqlite
          chmod 666 database/database.sqlite

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Prepare Laravel environment
        run: |
          php artisan key:generate
          php artisan config:clear
          php artisan config:cache
        env:
          APP_ENV: testing

      - name: Run database migrations
        run: php artisan migrate --force
        env:
          APP_ENV: testing

      - name: Run tests
        run: composer test
        env:
          APP_ENV: testing

  security-check:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy .env.example to .env
        run: |
          cp .env.example .env
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=sqlite/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=database\/database.sqlite/' .env
          sed -i 's/JWT_SECRET=.*/JWT_SECRET=ci_test_jwt_secret_key_for_testing_purposes_only/' .env
          sed -i 's/APP_ENV=.*/APP_ENV=testing/' .env
          php artisan key:generate
          php artisan config:clear
        env:
          APP_ENV: testing

      - name: Run security audit
        run: composer audit --format=json --no-interaction

  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy .env.example to .env
        run: |
          cp .env.example .env
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=sqlite/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=database\/database.sqlite/' .env
          sed -i 's/JWT_SECRET=.*/JWT_SECRET=ci_test_jwt_secret_key_for_testing_purposes_only/' .env
          sed -i 's/APP_ENV=.*/APP_ENV=testing/' .env
          php artisan key:generate
          php artisan config:clear
        env:
          APP_ENV: testing

      - name: Run PHP syntax check
        run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;
